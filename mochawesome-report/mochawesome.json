{
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-02T18:16:12.118Z",
    "end": "2022-02-02T18:16:22.440Z",
    "duration": 10322,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "64ff2332-55b7-4caf-9cdb-44ebf8fbef37",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa953282-56b3-4f87-89e7-bd30303dd0e0",
          "title": "Delete API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\deleteTest.spec.js",
          "file": "\\test\\deleteTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for delete request",
              "fullTitle": "Delete API tests using supertest should successfully pass the test for delete request",
              "timedOut": false,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.delete('/api/users/2')\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(204);\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "5a1d1b35-2752-4c7f-8847-bc7dd112d565",
              "parentUUID": "aa953282-56b3-4f87-89e7-bd30303dd0e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a1d1b35-2752-4c7f-8847-bc7dd112d565"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 452,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33227116-07d2-4d9f-976f-f2ad88833650",
          "title": "Get API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\getTest.spec.js",
          "file": "\\test\\getTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for get api with query param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api with query param",
              "timedOut": false,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.get('/api/users')\n\t.query({ page: '2' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.page).to.be.equal(2);\n\t\texpect(res.body.data[0].id).to.be.equal(7);\n\t\texpect(res.body.data[0].first_name).to.be.equal('Michael');\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "ae7cfc01-f861-4996-8636-c42d5a307c15",
              "parentUUID": "33227116-07d2-4d9f-976f-f2ad88833650",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully pass the test for get api without query param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api without query param",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.get('/api/users/2')\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.data.id).to.be.equal(2);\n\t\texpect(res.body.data.first_name).to.be.equal('Janet');\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "871e61e3-dfff-459c-b5ed-e0e0c4f82702",
              "parentUUID": "33227116-07d2-4d9f-976f-f2ad88833650",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully pass the test for get api with path param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api with path param",
              "timedOut": false,
              "duration": 693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let param = 1;\nrequest('https://fakerestapi.azurewebsites.net')\n\t.get('/api/v1/Authors/' + param)\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.id).to.be.equal(1);\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "8e58e898-b2c1-4e21-a8e3-dcb26d557fcf",
              "parentUUID": "33227116-07d2-4d9f-976f-f2ad88833650",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae7cfc01-f861-4996-8636-c42d5a307c15",
            "871e61e3-dfff-459c-b5ed-e0e0c4f82702",
            "8e58e898-b2c1-4e21-a8e3-dcb26d557fcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13114eee-75d2-4ddf-b4f0-52bcab791faa",
          "title": "Patch API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\patchTest.spec.js",
          "file": "\\test\\patchTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for patch request",
              "fullTitle": "Patch API tests using supertest should successfully pass the test for patch request",
              "timedOut": false,
              "duration": 700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.patch('/api/users/2')\n\t.send({ name: 'Michael', job: 'Tech Lead' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.name).to.be.equal('Michael');\n\t\texpect(res.body.job).to.be.equal('Tech Lead');\n\t\texpect(res.body.updatedAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "9d97551c-8284-4f33-b616-a692a94042b5",
              "parentUUID": "13114eee-75d2-4ddf-b4f0-52bcab791faa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d97551c-8284-4f33-b616-a692a94042b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d30029c-38b3-4bc1-835f-0562e2a4b07c",
          "title": "Post API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\postTest.spec.js",
          "file": "\\test\\postTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for post api",
              "fullTitle": "Post API tests using supertest should successfully pass the test for post api",
              "timedOut": false,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.post('/api/users')\n\t.send(userdata)\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(201);\n\t\texpect(res.body.name).to.be.equal('Faisal Khatri');\n\t\texpect(res.body.job).to.be.equal('QA');\n\t\texpect(res.body.id).not.to.be.null;\n\t\texpect(res.body.createdAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "4c362429-85d9-490a-a891-ac142d870aa4",
              "parentUUID": "5d30029c-38b3-4bc1-835f-0562e2a4b07c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c362429-85d9-490a-a891-ac142d870aa4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 408,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c00730bd-c097-4c30-b6f3-47624972a42c",
          "title": "Put API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\putTest.spec.js",
          "file": "\\test\\putTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for post api",
              "fullTitle": "Put API tests using supertest should successfully pass the test for post api",
              "timedOut": false,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.put('/api/users/2')\n\t.send({ name: 'Joseph', job: 'Business Analyst' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.name).to.be.equal('Joseph');\n\t\texpect(res.body.job).to.be.equal('Business Analyst');\n\t\texpect(res.body.updatedAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "a690e1f6-2bf1-4513-b4fa-b7f707ac84c7",
              "parentUUID": "c00730bd-c097-4c30-b6f3-47624972a42c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a690e1f6-2bf1-4513-b4fa-b7f707ac84c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d050dbf5-e9f0-4241-947b-177e964bfc63",
          "title": "Restful Booker API Tests",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\restfulbookerTest.spec.js",
          "file": "\\test\\restfulbookerTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Restful Booker API Tests\"",
              "fullTitle": "Restful Booker API Tests \"before all\" hook in \"Restful Booker API Tests\"",
              "timedOut": false,
              "duration": 1177,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/auth')\n    .send(userauthdata)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).not.to.be.null;\n        token = res.body.token;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "2dc0db81-5d6c-43af-a93f-5829815b9e0f",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully create a booking",
              "fullTitle": "Restful Booker API Tests should successfully create a booking",
              "timedOut": false,
              "duration": 1067,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/booking')\n    .send(booking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.bookingid).not.to.be.null;\n        expect(res.body.booking.firstname).to.be.equal(booking.firstname);\n        expect(res.body.booking.lastname).to.be.equal(booking.lastname);\n        expect(res.body.booking.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.booking.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.booking.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.booking.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.booking.additionalneeds).to.be.equal(booking.additionalneeds);\n        bookingId = res.body.bookingid;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "3c980f73-0238-48ce-9328-7c7b8910e691",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should fetch the booking of the provided booking id",
              "timedOut": false,
              "duration": 1038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(booking.firstname);\n        expect(res.body.lastname).to.be.equal(booking.lastname);\n        expect(res.body.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(booking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "c26f30f5-564c-4dd1-a33c-cbf947c5ccad",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the booking of the provided booking id using Put request",
              "fullTitle": "Restful Booker API Tests should update the booking of the provided booking id using Put request",
              "timedOut": false,
              "duration": 1066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .put('/booking/' + bookingId)\n    .send(updatedbooking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(updatedbooking.firstname);\n        expect(res.body.lastname).to.be.equal(updatedbooking.lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "a425a941-51a5-4574-bb74-838c1231c4aa",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the firstname and lastname of booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should update the firstname and lastname of booking of the provided booking id",
              "timedOut": false,
              "duration": 1040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var firstname = 'Michael';\nvar lastname = 'Trenor';\nrequest(baseurl)\n    .patch('/booking/' + bookingId)\n    .send({ firstname: firstname, lastname: lastname })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(firstname);\n        expect(res.body.lastname).to.be.equal(lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "e9568847-8267-4649-b150-6ad289520321",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should Delete the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should Delete the booking of the provided booking id",
              "timedOut": false,
              "duration": 1054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .delete('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(201);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "260dcfdb-81ce-46b3-84c5-d488f8aa05fb",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show 404 status code for deleted booking id",
              "fullTitle": "Restful Booker API Tests should show 404 status code for deleted booking id",
              "timedOut": false,
              "duration": 1078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(404);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "21460604-801f-4e0b-96b5-cbf96d964f0a",
              "parentUUID": "d050dbf5-e9f0-4241-947b-177e964bfc63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c980f73-0238-48ce-9328-7c7b8910e691",
            "c26f30f5-564c-4dd1-a33c-cbf947c5ccad",
            "a425a941-51a5-4574-bb74-838c1231c4aa",
            "e9568847-8267-4649-b150-6ad289520321",
            "260dcfdb-81ce-46b3-84c5-d488f8aa05fb",
            "21460604-801f-4e0b-96b5-cbf96d964f0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}
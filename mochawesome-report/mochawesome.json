{
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-02T18:33:42.960Z",
    "end": "2022-02-02T18:33:53.135Z",
    "duration": 10175,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "56b90b2c-f007-46d0-8894-47060302ff59",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2f512f3a-08ef-406c-8cd8-2e3c98334169",
          "title": "Delete API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\deleteTest.spec.js",
          "file": "\\test\\deleteTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for delete request",
              "fullTitle": "Delete API tests using supertest should successfully pass the test for delete request",
              "timedOut": false,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.delete('/api/users/2')\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(204);\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "46f8177c-a5db-4b0b-8afc-18dd02a42fbb",
              "parentUUID": "2f512f3a-08ef-406c-8cd8-2e3c98334169",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46f8177c-a5db-4b0b-8afc-18dd02a42fbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "533f6b5e-f6ce-4627-88e6-e9a36c321090",
          "title": "Get API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\getTest.spec.js",
          "file": "\\test\\getTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for get api with query param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api with query param",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.get('/api/users')\n\t.query({ page: '2' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.page).to.be.equal(2);\n\t\texpect(res.body.data[0].id).to.be.equal(7);\n\t\texpect(res.body.data[0].first_name).to.be.equal('Michael');\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "60fdadf2-3520-4d7a-a0f3-4db0eab72e0f",
              "parentUUID": "533f6b5e-f6ce-4627-88e6-e9a36c321090",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully pass the test for get api without query param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api without query param",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.get('/api/users/2')\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.data.id).to.be.equal(2);\n\t\texpect(res.body.data.first_name).to.be.equal('Janet');\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "cda425b8-28c0-4590-89e3-d62eb1ff31c2",
              "parentUUID": "533f6b5e-f6ce-4627-88e6-e9a36c321090",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully pass the test for get api with path param",
              "fullTitle": "Get API tests using supertest should successfully pass the test for get api with path param",
              "timedOut": false,
              "duration": 660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let param = 1;\nrequest('https://fakerestapi.azurewebsites.net')\n\t.get('/api/v1/Authors/' + param)\n\t.end(function (err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.id).to.be.equal(1);\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "e99152be-ced9-49c6-a967-1085bf044452",
              "parentUUID": "533f6b5e-f6ce-4627-88e6-e9a36c321090",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60fdadf2-3520-4d7a-a0f3-4db0eab72e0f",
            "cda425b8-28c0-4590-89e3-d62eb1ff31c2",
            "e99152be-ced9-49c6-a967-1085bf044452"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7bc9eb36-fd50-416f-9039-14da6267c463",
          "title": "Patch API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\patchTest.spec.js",
          "file": "\\test\\patchTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for patch request",
              "fullTitle": "Patch API tests using supertest should successfully pass the test for patch request",
              "timedOut": false,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.patch('/api/users/2')\n\t.send({ name: 'Michael', job: 'Tech Lead' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.name).to.be.equal('Michael');\n\t\texpect(res.body.job).to.be.equal('Tech Lead');\n\t\texpect(res.body.updatedAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "2e3bcf5f-2461-4986-9bf0-fb32b40db3e0",
              "parentUUID": "7bc9eb36-fd50-416f-9039-14da6267c463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e3bcf5f-2461-4986-9bf0-fb32b40db3e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d86c49a6-63c5-4e0e-aa56-2756e5fcefe6",
          "title": "Post API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\postTest.spec.js",
          "file": "\\test\\postTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for post api",
              "fullTitle": "Post API tests using supertest should successfully pass the test for post api",
              "timedOut": false,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.post('/api/users')\n\t.send(userdata)\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(201);\n\t\texpect(res.body.name).to.be.equal('Faisal Khatri');\n\t\texpect(res.body.job).to.be.equal('QA');\n\t\texpect(res.body.id).not.to.be.null;\n\t\texpect(res.body.createdAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "8b99afd5-c451-4548-8f15-d17e98a1b7c6",
              "parentUUID": "d86c49a6-63c5-4e0e-aa56-2756e5fcefe6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b99afd5-c451-4548-8f15-d17e98a1b7c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59454cef-a5ab-4390-bade-b4258bca5c39",
          "title": "Put API tests using supertest",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\putTest.spec.js",
          "file": "\\test\\putTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully pass the test for post api",
              "fullTitle": "Put API tests using supertest should successfully pass the test for post api",
              "timedOut": false,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n\t.put('/api/users/2')\n\t.send({ name: 'Joseph', job: 'Business Analyst' })\n\t.set('Accept', 'application/json')\n\t.set('Content-Type', 'application/json')\n\t.end(function(err, res) {\n\t\texpect(res.statusCode).to.be.equal(200);\n\t\texpect(res.body.name).to.be.equal('Joseph');\n\t\texpect(res.body.job).to.be.equal('Business Analyst');\n\t\texpect(res.body.updatedAt).not.to.be.null;\n\t\tdone();\n\t});",
              "err": {},
              "uuid": "78971274-fd96-42f3-8d53-13442ec28ecc",
              "parentUUID": "59454cef-a5ab-4390-bade-b4258bca5c39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78971274-fd96-42f3-8d53-13442ec28ecc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2575712e-91eb-4602-9324-6cef8b6f2629",
          "title": "Restful Booker API Tests",
          "fullFile": "D:\\Study\\SuperTest_POC\\test\\restfulbookerTest.spec.js",
          "file": "\\test\\restfulbookerTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Restful Booker API Tests\"",
              "fullTitle": "Restful Booker API Tests \"before all\" hook in \"Restful Booker API Tests\"",
              "timedOut": false,
              "duration": 1123,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/auth')\n    .send(userauthdata)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).not.to.be.null;\n        token = res.body.token;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "138c5569-f475-4a81-90a8-bdd775c91204",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully create a booking",
              "fullTitle": "Restful Booker API Tests should successfully create a booking",
              "timedOut": false,
              "duration": 1069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/booking')\n    .send(booking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.bookingid).not.to.be.null;\n        expect(res.body.booking.firstname).to.be.equal(booking.firstname);\n        expect(res.body.booking.lastname).to.be.equal(booking.lastname);\n        expect(res.body.booking.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.booking.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.booking.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.booking.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.booking.additionalneeds).to.be.equal(booking.additionalneeds);\n        bookingId = res.body.bookingid;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "91d87585-6b88-42b5-a34b-1b06a682566e",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should fetch the booking of the provided booking id",
              "timedOut": false,
              "duration": 1081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(booking.firstname);\n        expect(res.body.lastname).to.be.equal(booking.lastname);\n        expect(res.body.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(booking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "2647d5a0-0b46-48de-ada0-62b4e9089478",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the booking of the provided booking id using Put request",
              "fullTitle": "Restful Booker API Tests should update the booking of the provided booking id using Put request",
              "timedOut": false,
              "duration": 1106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .put('/booking/' + bookingId)\n    .send(updatedbooking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(updatedbooking.firstname);\n        expect(res.body.lastname).to.be.equal(updatedbooking.lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "df205021-983a-4894-a16b-8db7481b57d9",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the firstname and lastname of booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should update the firstname and lastname of booking of the provided booking id",
              "timedOut": false,
              "duration": 1065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var firstname = 'Michael';\nvar lastname = 'Trenor';\nrequest(baseurl)\n    .patch('/booking/' + bookingId)\n    .send({ firstname: firstname, lastname: lastname })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(firstname);\n        expect(res.body.lastname).to.be.equal(lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "99fd1914-984d-4813-b4d1-62722d76a356",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should Delete the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should Delete the booking of the provided booking id",
              "timedOut": false,
              "duration": 1112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .delete('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(201);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "725aff59-e9ba-4f48-8980-9c2849b6a70e",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show 404 status code for deleted booking id",
              "fullTitle": "Restful Booker API Tests should show 404 status code for deleted booking id",
              "timedOut": false,
              "duration": 1129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(404);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "a7424b72-5fb5-4f96-b08c-505cb3e36f86",
              "parentUUID": "2575712e-91eb-4602-9324-6cef8b6f2629",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91d87585-6b88-42b5-a34b-1b06a682566e",
            "2647d5a0-0b46-48de-ada0-62b4e9089478",
            "df205021-983a-4894-a16b-8db7481b57d9",
            "99fd1914-984d-4813-b4d1-62722d76a356",
            "725aff59-e9ba-4f48-8980-9c2849b6a70e",
            "a7424b72-5fb5-4f96-b08c-505cb3e36f86"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}